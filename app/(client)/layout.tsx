// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "../globals.css";

// import { ClerkProvider } from "@clerk/nextjs";
// import Footer from "@/components/Footer";
// import Header from "@/components/Header";


// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// const poppins = localFont({
//   src:'../fonts/Poppins.woff2',
// })
// export const metadata: Metadata = {
//   title: "Online Shop",
//   description: "Generated by Plan B Web services",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <ClerkProvider dynamic>
//       <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable}`}>
//         <Header/>
//         {children}
//         <Footer />
//       </body>
//     </html>
//     </ClerkProvider>
//   );
// }
// function localFont(arg0: { src: string; }) {
//   throw new Error("Function not implemented.");
// }

import type { Metadata } from "next";
import localFont from "next/font/local";
import "../globals.css";
import { ClerkProvider } from "@clerk/nextjs";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import { SanityLive } from "@/sanity/lib/live";
// import { Toaster } from "react-hot-toast";
import { VisualEditing } from "next-sanity";
import { draftMode } from "next/headers";
// import DisableDraftMode from "@/components/DisableDraftMode";

const poppins = localFont({
  src: "../fonts/Poppins.woff2",
  variable: "--font-poppins",
  weight: "400",
  preload: false,
});

export const metadata: Metadata = {
  title: "Ecommerce App for Shoppers",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider>
      <html lang="en">
        <body className={`${poppins.variable} antialiased`}>
          {(await draftMode()).isEnabled && (
            <>
              {/* <DisableDraftMode /> */}
              <VisualEditing />
            </>
          )}
          <Header />
          {children}
          <Footer />
          {/* <Toaster
            position="bottom-right"
            toastOptions={{
              style: {
                background: "#000000",
                color: "#fff",
              },
            }}
          /> */}
          <SanityLive />
        </body>
      </html>
    </ClerkProvider>
  );
}
